apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


compileJava.dependsOn clean

sourceCompatibility = 1.7

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
   

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories { maven{ url "http://10.1.228.199:18081/nexus/content/groups/public/" } }

//repositories {
//	mavenCentral()
//}

sourceSets {
	main {
		java { srcDirs = ['src/main/java']}
		resources { srcDirs = ['src/main/resources']}
	}
}

ext {	
	moduleName="amc-demo";
	moduleVersion="0.1-SNAPSHOT"
	publishUserName = "devadm"
	publishUserPassword = "Devadm@1212"
	publishURL="http://10.1.228.199:18081/nexus/content/repositories/snapshots/"
	builtBy="gradle 2.3"
}

group = 'com.ai.aisse'

dependencies{
    compile 'org.springframework:spring-jdbc:3.2.5.RELEASE'	
	compile "org.springframework:spring-context-support:4.1.6.RELEASE"
	compile 'org.apache.logging.log4j:log4j-core:2.2'
	compile 'org.apache.logging.log4j:log4j-1.2-api:2.2'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.2'
	compile "org.slf4j:slf4j-api:1.7.12"
	compile "jsch:jsch:0.1.29"
	compile "javax.mail:javax.mail:1.4.4"
	compile 'redis.clients:jedis:3.0.0'
	compile 'org.json:json:20140107'
	compile 'org.apache.velocity:velocity:1.7-SNAPSHOT'
	
	compile 'org.jboss.resteasy:resteasy-jaxrs:3.0.11.Final'
	compile 'org.jboss.resteasy:resteasy-client:3.0.11.Final'
	compile 'org.jboss.resteasy:resteasy-jackson-provider:3.0.11.Final'	

	compile ("com.alibaba:dubbox:2.8.3") {
		exclude group: 'org.springframework', module: 'spring'
	}
	compile "org.javassist:javassist:3.15.0-GA"
	
	testCompile(
		"org.springframework:spring-test:3.2.5.RELEASE",
		"junit:junit:4.12"
	)	
	compile ("com.101tec:zkclient:0.5") {
		exclude group: 'org.apache.zookeeper', module: 'zookeeper'
		exclude group: 'log4j', module: 'log4j'
	}
	compile "javax.servlet:javax.servlet-api:3.1.0"
	compile "javax.servlet.jsp:javax.servlet.jsp-api:2.3.1"
	
	compile 'org.apache.tomcat.embed:tomcat-embed-core:8.0.21'
	compile 'org.apache.tomcat.embed:tomcat-embed-logging-juli:8.0.21'
	compile 'javax.validation:validation-api:1.1.0.Final'
	
	compile 'org.apache.commons:commons-dbcp2:2.0'
	compile 'oracle.ojdbc:ojdbc:6'	
	
	compile 'sun.misc:sun.misc.BASE64Decoder:1.0'
	
	compile 'org.apache.logging.log4j:log4j-api:2.2'
	
	compile 'org.springframework:spring-core:3.2.5.RELEASE'
	compile 'org.springframework:spring-beans:3.2.5.RELEASE'
	compile 'org.springframework:spring-context:3.2.5.RELEASE'
	compile 'org.springframework:spring-context-support:3.2.5.RELEASE'
	compile 'org.springframework:spring-tx:3.2.5.RELEASE'
	compile 'org.springframework:spring-jdbc:3.2.5.RELEASE'
	
	compile ("com.alibaba:dubbox:2.8.4") {
		exclude group: 'org.springframework', module: 'spring'
	}

	compile 'org.apache.logging.log4j:log4j-api:2.3'
	compile "org.apache.logging.log4j:log4j-core:2.2"
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.2'
	
	compile 'com.ai:ipaas-mcs:0.2'
	
	
	
	compile 'com.alibaba:fastjson:1.2.4'
	compile 'org.mybatis:mybatis:3.3.0'
	compile 'org.mybatis:mybatis-spring:1.2.3'
	compile 'mysql:mysql-connector-java:5.1.38'
	compile 'org.mybatis.generator:mybatis-generator-core:1.3.2'
	compile 'com.github.pagehelper:pagehelper:4.0.0'
	

}

jar {
	version moduleVersion
	baseName moduleName
	destinationDir file("$buildDir/libs")
	exclude "context/**"
	exclude "email/**"
	exclude "spring/**"
	exclude "mapper/**"
	exclude "log**"
	manifest {
		attributes 'packageName': moduleName, 'Built-By': builtBy,'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
	}
}

task publishJar(type:Jar){
	version moduleVersion
	baseName moduleName
	from sourceSets.main.output	
	include "com/ai/aisse/core/rest/*"
	include "com/ai/aisse/core/vo/*"
	include "com/ai/aisse/core/po/*"
	manifest {
		attributes 'packageName': moduleName, 'Built-By': builtBy,'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
	}
}

task copyDeps(type: Copy) {
	from(project.configurations.runtime)
	into project.file('build/3rd-libs')
}

task copyConfigFiles(type: Copy){
	from fileTree(dir:'src/main/resources')
	destinationDir file("build/all-config")
}

build.dependsOn copyDeps,copyConfigFiles

publishing {
	publications {
	   publishing.publications.create("${moduleName}", MavenPublication) {
			groupId group
			artifactId moduleName
			version moduleVersion
			artifact  publishJar			
			}
	}
	


	repositories {
		maven {
			url  publishURL
			credentials {
				username = publishUserName
				password = publishUserPassword
			}
		}
	}
}
publish.dependsOn clean,publishJar